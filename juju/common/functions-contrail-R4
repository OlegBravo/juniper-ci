#!/bin/bash -e

base_url='https://s3-us-west-2.amazonaws.com/contrailpkgs'

function wget_file() {
  local ff="$1"
  if [ -f "$HOME/docker/$ff" ] ; then
    local flsize=$(stat -c%s "$HOME/docker/$ff")
    local frsize=$(curl --head -s ${base_url}/$ff | awk '/Content-Length/{print $2}' | tr -d '\r')
    local fltime=$(stat -c%Y "$HOME/docker/$ff")
    local frtime_full=`curl --head -s ${base_url}/$ff | awk '/Last-Modified/{print substr($0, index($0,$3))}' | tr -d '\r'`
    local frtime=`date --date="$frtime_full" +%s`
    if [[ "$flsize" != "$frsize" ]] ; then
      echo "INFO: Local file size ($flsize) is not equal to remote ($frsize). File is to be removed for re-download."
    elif [[ "$fltime" != "$frtime" ]] ; then
      echo "INFO: Local file time ($(stat -c%y "$HOME/docker/$ff")) is not equal to remote ($frtime_full). File is to be removed re-download."
    else
      echo "INFO: Local file $ff is the same as remote. Skipping download."
      return
    fi
  fi

  rm -f "$HOME/docker/$ff"
  echo "INFO: download ${base_url}/$ff to $HOME/docker/$ff"
  if ! wget -nv "${base_url}/$ff" -O "$HOME/docker/$ff" ; then
    rm -f "$HOME/docker/$ff"
    echo "ERROR: Can't download ${base_url}/$ff to $HOME/docker/$ff"
    exit 1
  fi
}

function find_images() {
  image_controller="contrail-controller-ubuntu${uver}-${CONTRAIL_BUILD}.tar.gz"
  image_analytics="contrail-analytics-ubuntu${uver}-${CONTRAIL_BUILD}.tar.gz"
  image_analyticsdb="contrail-analyticsdb-ubuntu${uver}-${CONTRAIL_BUILD}.tar.gz"
  if [[ -f "$HOME/docker/$image_controller" && -f "$HOME/docker/$image_analytics" && -f"$HOME/docker/$image_analyticsdb" ]] ; then
    echo "INFO: container images found - $image_controller"
    return
  fi

  # exact version is not found. try to find latest version for release from controller name.
  major_ver=`echo $CONTRAIL_BUILD | cut -d '-' -f 1`
  build_number=`ls -1 $HOME/docker/ | grep "contrail-controller-ubuntu${uver}-${major_ver}" | sed "s/^.*-\([0-9]*\)\.tar\.gz/\1/" | sort -n | tail -1`
  image_controller="contrail-controller-ubuntu${uver}-${major_ver}-${build_number}.tar.gz"
  image_analytics="contrail-analytics-ubuntu${uver}-${major_ver}-${build_number}.tar.gz"
  image_analyticsdb="contrail-analyticsdb-ubuntu${uver}-${major_ver}-${build_number}.tar.gz"
  if [[ -f "$HOME/docker/$image_controller" && -f "$HOME/docker/$image_analytics" && -f"$HOME/docker/$image_analyticsdb" ]] ; then
    echo "INFO: container images found - $image_controller"
    return
  fi

  return 1
}

function check_containers() {
  mkdir -p "$HOME/docker"
  packages="contrail_debs-${CONTRAIL_BUILD}-${VERSION}.tgz"
  wget_file "$packages"

  local uver=""
  if [[ "$SERIES" == "trusty" ]] ; then
    local uver="14.04"
  elif [[ "$SERIES" == "xenial" ]] ; then
    local uver="16.04"
  fi
  if find_images ; then
    return
  fi
  echo "INFO: cached images are not found. downloading... $(date)"

  di_file="contrail-docker-images_${CONTRAIL_BUILD}-$SERIES.tgz"
  if ! curl --head -s "${base_url}/${di_file}" | grep "200 OK" ; then
    echo "ERROR: There is no file '${base_url}/${di_file}'. Exiting..."
    exit 1
  fi

  if ! wget -nv "${base_url}/${di_file}" -O "$HOME/docker/$di_file" ; then
    rm -f "$HOME/docker/$di_file"
    echo "ERROR: Can't download ${base_url}/$di_file to $HOME/docker/$di_file"
    exit 1
  fi
  echo "INFO: unpacking archive with containers..."
  pushd "$HOME/docker"
  tar -xvf $di_file
  popd
  rm -f "$HOME/docker/$di_file"

  find_images
}
