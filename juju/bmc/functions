#!/bin/bash

function delete_network() {
  local network_name="$1"
  virsh net-destroy $network_name 2> /dev/null || true
  virsh net-undefine $network_name 2> /dev/null || true
}

function create_network() {
  local network_name="$1"
  local addr="$2"

  delete_network $network_name

  echo "<network><name>$network_name</name><forward mode=\"nat\"><nat><port start=\"1024\" end=\"65535\"/></nat></forward><ip address=\"$addr.1\" netmask=\"255.255.255.0\"><dhcp><range start=\"$addr.10\" end=\"$addr.254\"/></dhcp></ip></network>" > /tmp/juju-net.xml
  virsh net-define /tmp/juju-net.xml
  rm /tmp/juju-net.xml
  virsh net-autostart $network_name
  virsh net-start $network_name
}

function create_pool() {
  local poolname="$1"
  local path="/var/lib/libvirt/$poolname"
  virsh pool-define-as $poolname dir - - - - "$path"
  virsh pool-build $poolname
  virsh pool-start $poolname
  virsh pool-autostart $poolname
}

function get_pool_path() {
  local poolname=$1
  virsh pool-info $poolname &>/dev/null || return
  virsh pool-dumpxml $poolname | sed -n '/path/{s/.*<path>\(.*\)<\/path>.*/\1/;p}'
}

function delete_domains() {
  for name in `virsh list --all | grep "rd-overcloud-$NUM-" | awk '{print $2}'` ; do
    virsh destroy $name || true
    sleep 2
    virsh undefine $name || true
  done

  if virsh dominfo rd-undercloud-$NUM 2>/dev/null ; then
    virsh destroy rd-undercloud-$NUM || true
    sleep 2
    virsh undefine rd-undercloud-$NUM || true
  fi
}

function delete_volume() {
  volname=$1
  poolname=$2
  pool_path=$(get_pool_path $poolname)
  virsh vol-delete $volname --pool $poolname 2>/dev/null || rm -f $pool_path/$volname 2>/dev/null
}
