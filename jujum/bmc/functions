#!/bin/bash

export LIBVIRT_DEFAULT_URI=qemu:///system
virsh_cmd="virsh"

# set this name manually to mac's definition below
job_prefix="jovs"

juju_controller_name="${job_prefix}-cloud"
poolname="${job_prefix}images"
net_driver=${net_driver:-e1000}
nname="$job_prefix"
addr="10.0.0"

mac_base='52:54:00:10:00'
# juju controller
cont_idx='99'
# openstack components (controllers + rabbit + db)
os_cont_0_idx='10'
# network nodes
os_net_1_idx='20'
os_net_2_idx='21'
os_net_3_idx='22'
# openstack compute
os_comp_1_idx='30'
os_comp_2_idx='31'

function delete_network() {
  local network_name="$1"
  $virsh_cmd net-destroy $network_name 2> /dev/null || true
  $virsh_cmd net-undefine $network_name 2> /dev/null || true
}

function create_network() {
  local network_name="$1"
  local addr="$2"

  delete_network $network_name

  echo "<network><name>$network_name</name><forward mode=\"nat\"><nat><port start=\"1024\" end=\"65535\"/></nat></forward><ip address=\"$addr.1\" netmask=\"255.255.255.0\"><dhcp><range start=\"$addr.10\" end=\"$addr.254\"/></dhcp></ip></network>" > /tmp/juju-net.xml
  $virsh_cmd net-define /tmp/juju-net.xml
  rm /tmp/juju-net.xml
  $virsh_cmd net-autostart $network_name
  $virsh_cmd -c qemu:///system net-start $network_name
}

function create_pool() {
  local poolname="$1"
  local path="$HOME/libvirt/$poolname"
  $virsh_cmd pool-define-as $poolname dir - - - - "$path"
  $virsh_cmd pool-build $poolname
  $virsh_cmd pool-start $poolname
  $virsh_cmd pool-autostart $poolname
}

function delete_pool() {
  local poolname="$1"
  local path=`get_pool_path $poolname`
  $virsh_cmd pool-destroy $poolname
  $virsh_cmd pool-undefine $poolname
  rm -rf "$poolpath" || /bin/true
}

function get_pool_path() {
  local poolname=$1
  $virsh_cmd pool-info $poolname &>/dev/null || return
  $virsh_cmd pool-dumpxml $poolname | sed -n '/path/{s/.*<path>\(.*\)<\/path>.*/\1/;p}'
}

function delete_domains() {
  for name in `$virsh_cmd list --all | grep "${job_prefix}-" | awk '{print $2}'` ; do
    $virsh_cmd destroy $name || /bin/true
    sleep 2
    $virsh_cmd undefine $name || /bin/true
  done
}

function delete_volume() {
  volname=$1
  poolname=$2
  pool_path=$(get_pool_path $poolname)
  $virsh_cmd vol-delete $volname --pool $poolname 2>/dev/null || rm -f $pool_path/$volname 2>/dev/null
}

function post_deploy() {
  echo "INFO: Waiting for services start: $(date)"

  if ! wait_absence_status_for_services "executing|blocked|waiting" 45 ; then
    echo "ERROR: Waiting for services end: $(date)"
    return 1
  fi
  echo "INFO: Waiting for services end: $(date)"

  # check for errors
  if juju-status | grep "current" | grep error ; then
    echo "ERROR: Some services went to error state"
    juju-ssh 0 sudo grep Error /var/log/juju/all-machines.log 2>/dev/null
    return 1
  fi

  juju-status-tabular
}
